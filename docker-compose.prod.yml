version: "3.7"

services:
  redis:
    image: redis:alpine
    container_name: "${PROJECT_NAME}-redis"
    restart: unless-stopped
    networks:
      default-network: {}
      postgres_network: {}
      postgres_app_db_network: {}

  app:
    restart: unless-stopped
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    container_name: "${PROJECT_NAME}-container"
    image: "${PROJECT_NAME}-image"
    depends_on:
      - redis
    volumes:
      - ./app/:/usr/src/app/
      - "/webapps/${PROJECT_NAME}/cdn:/usr/src/cdn"
    env_file: "/webapps/${PROJECT_NAME}/production.env"
    ports:
      - "127.0.0.1:${EXPOSE_PORT}:8000"
    networks:
      default-network: {}
      postgres_network: {}
      postgres_app_db_network: {}

  celery:
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    image: "${PROJECT_NAME}-image"
    container_name: "${PROJECT_NAME}-celery"
    restart: unless-stopped
    command: "celery -A app worker -l info"
    volumes:
      - ./app/:/usr/src/app/
      - "/webapps/${PROJECT_NAME}/cdn:/usr/src/cdn"
    env_file: "/webapps/${PROJECT_NAME}/production.env"
    depends_on:
      - redis
      - app
    networks:
      default-network: {}
      postgres_network: {}
      postgres_app_db_network: {}

networks:
  default-network:
    external: false
    name: default-network
  postgres_app_db_network:
    external: true
    name: postgres_app_db_network
  postgres_network:
    external: true
    name: postgres_network
